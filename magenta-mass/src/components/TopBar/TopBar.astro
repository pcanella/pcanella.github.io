---
import styles from "./style.module.scss";
import TopBarClock from "../TopBarClock/TopBarClock.astro";
import DropdownMenu from "../DropdownMenu/DropdownMenu.astro";
import topMenuItems from "../../models/TopMenuItems";
---

<nav class={styles.topBarContainer} class="topBar">
    <div class={styles.leftBar}>
        <button class={styles.logoButton}
            ><img
                alt="Welcome to Patrick Canella's Retro site!"
                class={styles.pcLogoImage}
                src="src/assets/patretrologo.png"
            />
        </button>
        <ul class={styles.navBar}>
            <!-- <li>
                <button target="_blank" href="https://patcanella.com/resume"
                    >Resume</button
                >
            </li>
            <li>
                <a target="_blank" href="https://www.dev.to/pcanella/">Blog</a>
            </li>
            <li>
                <a
                    target="_blank"
                    href="https://www.linkedin.com/in/patrickcanella/"
                    class={styles.linkedInButton}>LinkedIn</a
                >
            </li> -->
            <macintosh-menu>
                <span slot="menuTitle">About</span>
                {
                    topMenuItems.about.map((item) => (
                        <macintosh-menu-item slot="menuList" href={item.href}>
                            {item.title}
                        </macintosh-menu-item>
                    ))
                }
            </macintosh-menu>
            <macintosh-menu>
                <span slot="menuTitle">Instagram</span>
                {
                    topMenuItems.instagram.map((item) => (
                        <macintosh-menu-item slot="menuList" href={item.href}>
                            {item.title}
                        </macintosh-menu-item>
                    ))
                }
            </macintosh-menu>
            <macintosh-menu>
                <span slot="menuTitle">Github</span>
                {
                    topMenuItems.github.map((item) => (
                        <macintosh-menu-item slot="menuList" href={item.href}>
                            {item.title}
                        </macintosh-menu-item>
                    ))
                }
            </macintosh-menu>

            <macintosh-menu>
                <span slot="menuTitle">LinkedIn</span>
                {
                    topMenuItems.linkedIn.map((item) => (
                        <macintosh-menu-item slot="menuList" href={item.href}>
                            {item.title}
                        </macintosh-menu-item>
                    ))
                }
            </macintosh-menu>

            <div
                style=`
               align-items: center;
    background: linear-gradient(#000 50%, transparent 0);
    background-clip: content-box;
    background-size: 6.6666666667% 13.3333333333%;
    display: flex
;
    flex: none;
    height: 1.5rem;
    margin: .1rem 0;
    padding: .2rem .1rem;
`
            >
                TEST
            </div>
        </ul>
    </div>
    <div class={styles.rightBar}>
        <TopBarClock />
        <button class={styles.githubLogoButton}>
            <img
                class={styles.githubLogoImage}
                src="src/assets/github-logo.gif"
            />
        </button>
    </div>
</nav>

<script>
    const macMenus = document.querySelectorAll("macintosh-menu");

    macMenus.forEach((item) => {
        item.addEventListener("menu-clicked", (event) => {
            macMenus.forEach((macMenu) => {
                // Close all other menus
                if (macMenu !== event.currentTarget) {
                    macMenu.setAttribute("open", "false");
                }
            });

            // Toggle the clicked one (optional if handled internally)
            const isOpen = event.currentTarget.getAttribute("open") === "true";
            event.currentTarget.setAttribute("open", isOpen ? "false" : "true");
        });
    });

    // define a handler
    function keyUp(e) {
        // this would test for whichever key is 40 (down arrow) and the ctrl key at the same time
        if (e.ctrlKey && e.code === "ArrowDown") {
            // call your function to do the thing
            pauseSound();
        }
    }
    // register the handler
    document.addEventListener("keyup", keyUp, false);
</script>
