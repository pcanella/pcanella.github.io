---
import TopBar from "../TopBar/TopBar.astro";
import { progress, isStartingUp } from "../../store.js";
import styles from "./style.module.scss";
---

<script type="module" src={`${import.meta.env.BASE_URL}/assets/scripts/register-components.js`}></script>

<div class={styles.container} id="container">
	<div
		id="startupContent"
		aria-hidden={!isStartingUp.value}
		class={styles.startupWindow}
	>
		<div class={styles.startupWindowContent}>
			<div class={styles.startupWindowInnerContent}>
				<div class={styles.patOsText}>
					<span class={styles.patOsText1}>Pat</span>
					<span class={styles.patOsText2}>OS</span>
				</div>
				<span class={styles.startingUpText}>Starting up...</span>

				<progress
					id="startuploader"
					max="100"
					value={String(progress)}
					class={styles.startingUpProgressBar}></progress>
			</div>
		</div>
	</div>

	<div id="mainContent" aria-hidden={isStartingUp.value}>
		<TopBar />
		<main class="mainWindow">
			<macintosh-dialog-box
				aria-hidden="true"
				id="openappdialog"
				class={styles.openAppDialog}
			>
				<span
					>KlickyTracker has both Android and iOS Apps! Which one would you like to see?</span
				>

				<div slot="icon">
					<img src={`${import.meta.env.BASE_URL}/assets/dialogimage.png`} width="55"/>

				</div>
				<div class={styles.dialogBoxFooter} slot="callToAction">
					<macintosh-button id="cancelbtn">Cancel</macintosh-button>
					<macintosh-button id="androidbtn"  data-type="primary">Android...</macintosh-button>
					<macintosh-button id="iosbtn" data-type="primary"
						>iOS...</macintosh-button
					>
				</div>
			</macintosh-dialog-box>
			<!-- <macintosh-button id="hellobtn" data-type="primary"
				>Hello Button</macintosh-button
			> -->
			<div class={styles.iconSection}>
				<macintosh-icon-button name="hard-drive"
					>Patrick's Mac</macintosh-icon-button
				>
				<macintosh-icon-button name="folder"
					>My Apps</macintosh-icon-button
				>
			</div>

			<macintosh-window
				id="welcomewindow"
				data-header="Welcome!"
				x={500}
				y={100}
				width={"550px"}
				data-active="true"
				aria-hidden="false"
			>
				<section class={styles.mainWindow}>
					<h2 class={styles.mainHeader}>
						Hi! I'm <span class={styles.patrick}>Patrick.</span>
					</h2>
					<img
						class={styles.selfportrait}
						src={`${import.meta.env.BASE_URL}/assets/self.png`}
						width="200"
					/>
					<div class={styles.welcome}>
						And welcome to my little web home! <img
							class={styles.houseemoji}
							src="/classic/assets/houseemoji.jpg"
						/>
					</div>
				</section>
			</macintosh-window>

			<macintosh-window
				id="myappswindow"
				data-header="My Apps"
				x={400}
				y={-50}
				width={"400px"}
				aria-hidden="true"
				data-active="false"
			>
				<section class={styles.mainWindow}>
					<h3 class={styles.mainHeader}>
						Here are a list of My Apps currently in App Stores!
					</h3>

					<div class={styles.appsList}>
						<macintosh-icon-button
							id="fishharmonyicon"
							src="/classic/assets/fishharmonymacicon.png"
							>Fish Harmony</macintosh-icon-button
						>

						<macintosh-icon-button
							id="klickytrackericon"
							src="/classic/assets/klickytrackermacicon.png"
							>KlickyTracker</macintosh-icon-button
						>
					</div>
					<div class={styles.welcome}>
						And welcome to my little web home! <img
							class={styles.houseemoji}
							src="/classic/assets/houseemoji.jpg"
						/>
					</div>
				</section>
			</macintosh-window>
		</main>
	</div>
</div>

<script>
	import { isPatricksMacOpen, isStartingUp, progress } from "../../store.js";

	const testwindow = document.getElementById("welcomewindow");
	const myAppsWindow = document.getElementById("myappswindow");
	const dialogBox = document.getElementById("openappdialog");
	const klickyTrackerIconEl = document.getElementById("klickytrackericon");
	testwindow?.addEventListener("macintosh:window-close-button", () => {
		alert("AHHH!");
	});

	document.querySelector("#cancelbtn")?.addEventListener("click", () => {
		dialogBox?.setAttribute("aria-hidden", "true");
	});

	document.querySelector("#androidbtn")?.addEventListener("click", () => {
		window.open(
			"https://play.google.com/store/apps/details?id=com.klickytracker", "_blank"
		);
	});

	document.querySelector("#iosbtn")?.addEventListener("click", () => {
		window.open(
			"https://apps.apple.com/sg/app/klickytracker/id1660636101",
			"_blank",
		);
	});

	const selectionHelper = (currentId) => {
		document.querySelectorAll("macintosh-window").forEach((el) => {
			if (el.id !== currentId) {
				el.setAttribute("data-active", "false");
			} else {
				el.setAttribute("data-active", "true");
			}
		});
	};

	document.querySelectorAll("macintosh-window").forEach((el) => {
		el.addEventListener("click", (e) => {
			const currentId = e.currentTarget.id;
			const selectedWindow = document.getElementById(currentId);
			selectedWindow?.setAttribute("data-active", "true");
			selectionHelper(currentId);
		});
	});
	const macWindow = document.getElementById("draggable-macintoshhdwindow");
	const hdEl = document.querySelector("[name='hard-drive']");
	const fhAppEl = document.querySelector("#fishharmonyicon");

	klickyTrackerIconEl?.addEventListener("dblclick", () => {
		dialogBox?.setAttribute("aria-hidden", "false");
		var audio = new Audio("/classic/assets/sounds/Bip.wav");
		audio.play();
	});

	fhAppEl?.addEventListener("dblclick", () => {
		window.open(
			"https://apps.apple.com/us/app/fish-harmony/id1309770017",
			"_blank",
		);
	});

	hdEl?.addEventListener("dblclick", (event) => {
		macWindow?.setAttribute("aria-hidden", "false");
	});

	const folderEl = document.querySelector("[name='folder']");

	folderEl?.addEventListener("dblclick", (event) => {
		folderEl?.blur();
		myAppsWindow?.setAttribute("aria-hidden", "false");
		const currentId = myAppsWindow.id;
		selectionHelper(currentId);
	});

	function fakeLoad() {
		let value = 0;

		function step() {
			if (value >= 100) return;
			// Simulate jittery increments
			const increment = Math.floor(Math.random() * 5) + 1;
			value = Math.min(100, value + increment);

			progress.set(value);

			// Add nostalgic slowness
			const delay = Math.random() * 100 + 100; // 100msâ€“400ms
			setTimeout(step, delay);
		}

		step();
	}

	// Start loading when page is ready
	document.addEventListener("DOMContentLoaded", fakeLoad);

	const mainWindow = document.getElementById("draggable-mainWindow");
	mainWindow?.setAttribute("aria-hidden", "true");
	setTimeout(() => {
		isStartingUp.set(false);
	}, 5000); // TODO: ON LAUNCH CHANGE TO 6000

	isPatricksMacOpen.subscribe((profile) => {
		if (isPatricksMacOpen.value === true) {
			const macWindow = document.getElementById(
				"draggable-macintoshhdwindow",
			);
			macWindow?.setAttribute("aria-hidden", "false");
		}
	});

	progress.subscribe(() => {
		const progressBar = document.getElementById("startuploader");
		progressBar?.setAttribute("value", String(progress.value));

		if (progressBar?.getAttribute("value") === String(100)) {
			isStartingUp.set(false);
		}
	});

	isStartingUp.subscribe((profile) => {
		if (isStartingUp.value === false) {
			document
				.getElementById("mainContent")
				?.setAttribute("aria-hidden", "false");
			document
				.getElementById("startupContent")
				?.setAttribute("aria-hidden", "true");
		}
	});
</script>
