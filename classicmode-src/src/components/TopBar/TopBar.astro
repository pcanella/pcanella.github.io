---
import styles from "./style.module.scss";
import TopBarClock from "../TopBarClock/TopBarClock.astro";
import topMenuItems from "../../models/TopMenuItems";
---

<nav class={styles.topBarContainer} class="topBar">
    <div class={styles.leftBar}>
        <!-- <button class={styles.logoButton}
            ><img
                alt="Welcome to Patrick Canella's Retro site!"
                class={styles.pcLogoImage}
                src="src/classic/assets/patretrologo.png"
            />
        </button> -->

        <ul class={styles.navBar}>
            <macintosh-menu>
                <div class={styles.logoButtonContainer} slot="menuTitle">
                    <div class={styles.logoButton}>
                        <img
                            alt="Welcome to Patrick Canella's Retro site!"
                            class={styles.pcLogoImage}
                            src="classic/assets/patretrologo.png"
                        />
                    </div>
                </div>
                {
                    topMenuItems.pc.map((item) => (
                        <macintosh-menu-item slot="menuList" href={item.href} onClick={item?.onClick}>
                            {item.title}
                        </macintosh-menu-item>
                    ))
                }
            </macintosh-menu>

            <macintosh-menu>
                <span slot="menuTitle">About</span>
                {
                    topMenuItems.about.map((item) => (
                        <macintosh-menu-item slot="menuList" href={item.href}>
                            {item.title}
                        </macintosh-menu-item>
                    ))
                }
            </macintosh-menu>
            <macintosh-menu>
                <span slot="menuTitle">Instagram</span>
                {
                    topMenuItems.instagram.map((item) => (
                        <macintosh-menu-item slot="menuList" href={item.href}>
                            {item.title}
                        </macintosh-menu-item>
                    ))
                }
            </macintosh-menu>
            <macintosh-menu>
                <span slot="menuTitle">Github</span>
                {
                    topMenuItems.github.map((item) => (
                        <macintosh-menu-item slot="menuList" href={item.href}>
                            {item.title}
                        </macintosh-menu-item>
                    ))
                }
            </macintosh-menu>

            <macintosh-menu>
                <span slot="menuTitle">LinkedIn</span>
                {
                    topMenuItems.linkedIn.map((item) => (
                        <macintosh-menu-item slot="menuList" href={item.href}>
                            {item.title}
                        </macintosh-menu-item>
                    ))
                }
            </macintosh-menu>

       
        </ul>
    </div>
    <div class={styles.rightBar}>
        <TopBarClock />
        <button class={styles.githubLogoButton}>
            <img
                class={styles.githubLogoImage}
                src="classic/assets/github-logo.gif"
            />
        </button>
    </div>
</nav>

<script>
    const macMenus = document.querySelectorAll("macintosh-menu");

    macMenus.forEach((item) => {
        item.addEventListener("menu-clicked", (event) => {
            macMenus.forEach((macMenu) => {
                // Close all other menus
                if (macMenu !== event.currentTarget) {
                    macMenu.setAttribute("open", "false");
                }
            });

            // Toggle the clicked one (optional if handled internally)
            const isOpen = event.currentTarget.getAttribute("open") === "true";
            event.currentTarget.setAttribute("open", isOpen ? "false" : "true");
        });
    });

    // define a handler
    function keyUp(e) {
        // this would test for whichever key is 40 (down arrow) and the ctrl key at the same time
        if (e.ctrlKey && e.code === "ArrowDown") {
            // call your function to do the thing
            pauseSound();
        }
    }
    // register the handler
    document.addEventListener("keyup", keyUp, false);
</script>
