---
import styles from "./style.module.scss";
import { scope } from "simple:scope";
const {
    hidden = false,
    dropdownId,
    mId,
    dropdownItems = [],
    buttonTitle = "",
} = Astro.props;
const ddId = `dropdown-${dropdownId}`;
---

<div
    id={scope("dropdown-menu")}
    data-menu-id={scope("menu-id")}
    data-mId={mId}
    class={styles.dropdownMenu}
>
    <button id={scope("dropdown-menu-button")}
        >{buttonTitle}</button
    >
    <ul
        id={scope("menu-content")}
        aria-expanded={hidden}
        class={styles.dropdownMenuContent}
    >
        {
            dropdownItems.map((item) => {
                return (
                    <li>
                        <a
                            target="_blank"
                            id={scope("menu-item")}
                            href={item.href}
                        >
                            {item.title}
                        </a>
                    </li>
                );
            })
        }
    </ul>
</div>

<script>
    import { scope } from "simple:scope";

    document.addEventListener("click", (e) => {
        const ddIdMenuContentEl = document?.getElementById(
            scope("menu-content"),
        );

        if (e.target.id === scope("menu-item")) {
            // We want it to blink and THEN go to the href properly
            e.preventDefault();
            e.target.parentNode.classList.add("is-clicked");
            setTimeout(() => {
                window.open(e.target.href, "_blank");
                e.target.parentNode.classList.remove("is-clicked");
                // Let the animation do its thing...
            }, 700);
            return;
        }

        if (e.target.id === scope("dropdown-menu-button")) {
            const ddIdMenuContentEl = document?.getElementById(
                scope("menu-content"),
            );

            const currentAriaStatus = document
                .getElementById(scope("menu-content"))
                ?.getAttribute("aria-expanded");

            ddIdMenuContentEl?.setAttribute(
                "aria-expanded",
                currentAriaStatus === "true" ? "false" : "true",
            );
            return;
        } else {
            ddIdMenuContentEl?.setAttribute("aria-expanded", "false");
        }
    });
</script>

